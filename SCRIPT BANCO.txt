-- Criação do banco de dados
CREATE DATABASE IF NOT EXISTS singerjob;
USE singerjob;

-- Tabela de Artista
CREATE TABLE Artista (
    id_artista INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    endereco VARCHAR(255),
    telefone VARCHAR(15),
    genero VARCHAR(50),
    tipo_arte VARCHAR(100),
    biografia TEXT,
    portfolio TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Empresário
CREATE TABLE Empresario (
    id_empresario INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    endereco VARCHAR(255),
    telefone VARCHAR(15),
    genero VARCHAR(50),
    empresa VARCHAR(255),
    interesses TEXT,
    biografia TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Postagens
CREATE TABLE Postagens (
    id_postagem INT AUTO_INCREMENT PRIMARY KEY,
    autor_id INT NOT NULL,
    conteudo TEXT NOT NULL,
    tipo_postagem VARCHAR(100),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (autor_id) REFERENCES Artista(id_artista) ON DELETE CASCADE
);

-- Tabela de Conexões
CREATE TABLE Conexoes (
    id_conexao INT AUTO_INCREMENT PRIMARY KEY,
    solicitante_id INT NOT NULL,
    solicitado_id INT NOT NULL,
    status VARCHAR(50) DEFAULT 'pendente',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (solicitante_id) REFERENCES Artista(id_artista) ON DELETE CASCADE,
    FOREIGN KEY (solicitado_id) REFERENCES Empresario(id_empresario) ON DELETE CASCADE
);

-- Tabela de Notificações
CREATE TABLE Notificacoes (
    id_notificacao INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    tipo VARCHAR(50),
    conteudo TEXT,
    lido BOOLEAN DEFAULT FALSE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES Artista(id_artista) ON DELETE CASCADE
);

-- Tabela de Avaliações
CREATE TABLE Avaliacoes (
    id_avaliacao INT AUTO_INCREMENT PRIMARY KEY,
    avaliador_id INT NOT NULL,
    avaliado_id INT NOT NULL,
    nota INT CHECK (nota BETWEEN 1 AND 5),
    comentario TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (avaliador_id) REFERENCES Artista(id_artista) ON DELETE CASCADE,
    FOREIGN KEY (avaliado_id) REFERENCES Empresario(id_empresario) ON DELETE CASCADE
);

-- Tabela de Mensagens
CREATE TABLE Mensagens (
    id_mensagem INT AUTO_INCREMENT PRIMARY KEY,
    remetente_id INT NOT NULL,
    destinatario_id INT NOT NULL,
    conteudo TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (remetente_id) REFERENCES Artista(id_artista) ON DELETE CASCADE,
    FOREIGN KEY (destinatario_id) REFERENCES Empresario(id_empresario) ON DELETE CASCADE
);
